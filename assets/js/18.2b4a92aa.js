(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{523:function(s,t,e){s.exports=e.p+"assets/img/image-20210730093130781.5a0f04e6.png"},557:function(s,t,e){"use strict";e.r(t);var a=e(6),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"安装-ffmpeg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-ffmpeg"}},[s._v("#")]),s._v(" 安装 ffmpeg")]),s._v(" "),a("div",{staticClass:"language-Shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" ffmpeg\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"转码-convert-wmv-to-mp4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转码-convert-wmv-to-mp4"}},[s._v("#")]),s._v(" 转码 convert wmv to mp4")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" ffmpeg -i v1.wmv -qscale:v "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" v1.mp4\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" ffmpeg -i v2.wmv -qscale:v "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" v2.mp4\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("其他转码示例：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ffmpeg -i out.ogv -vcodec h264 out.mp4\nffmpeg -i out.ogv -vcodec mpeg4 out.mp4\nffmpeg -i out.ogv -vcodec libxvid out.mp4\nffmpeg -i out.mp4 -vcodec wmv1 out.wmv\nffmpeg -i out.mp4 -vcodec wmv2 out.wmv\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("-i 后面是输入文件名。-vcodec 后面是编码格式，h264 最佳，但 Windows 系统默认不安装。如果是要插入 ppt 的视频，选择 wmv1 或 wmv2 基本上万无一失。\n附加选项：-r 指定帧率，-s 指定分辨率，-b 指定比特率；于此同时可以对声道进行转码，-acodec 指定音频编码，-ab 指定音频比特率，-ac 指定声道数，例如")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ffmpeg -i out.ogv -s 640x480 -b 500k -vcodec h264 -r "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("29.97")]),s._v(" -acodec libfaac -ab 48k -ac "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" out.mp4\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"剪切"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#剪切"}},[s._v("#")]),s._v(" 剪切")]),s._v(" "),a("p",[s._v("用 -ss 和 -t 选项， 从第 30 秒开始，向后截取 10 秒的视频，并保存：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ffmpeg -i input.wmv -ss 00:00:30.0 -c copy -t 00:00:10.0 output.wmv\nffmpeg -i input.wmv -ss "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v(" -c copy -t "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" output.wmv\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("达成相同效果，也可以用 -ss 和 -to 选项， 从第 30 秒截取到第 40 秒:")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ffmpeg -i input.wmv -ss "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v(" -c copy -to "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),s._v(" output.wmv\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("值得注意的是，ffmpeg 为了加速，会使用关键帧技术， 所以有时剪切出来的结果在起止时间上未必准确。 通常来说，把 -ss 选项放在 -i 之前，会使用关键帧技术； 把 -ss 选项放在 -i 之后，则不使用关键帧技术。 如果要使用关键帧技术又要保留时间戳，可以加上 -copyts 选项:")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ffmpeg -ss 00:01:00 -i video.mp4 -to 00:02:00 -c copy -copyts cut.mp4\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("参考："),a("a",{attrs:{href:"https://trac.ffmpeg.org/wiki/Seeking",target:"_blank",rel:"noopener noreferrer"}},[s._v("ffmpeg.org"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"合并-concat-vedio"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并-concat-vedio"}},[s._v("#")]),s._v(" 合并 concat vedio")]),s._v(" "),a("p",[s._v("把多个视频合并成一个视频，这里简单的使用 contact demuxer:")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" mylist.txt\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'v1.mp4'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'v2.mp4'")]),s._v("\n\nffmpeg -f concat -i mylist.txt -c copy output.mp4\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("img",{attrs:{src:e(523),alt:"image-20210730093130781"}})]),s._v(" "),a("p",[s._v("参考：")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://ffmpeg.org/faq.html#How-can-I-join-video-files_003f",target:"_blank",rel:"noopener noreferrer"}},[s._v("stackoverflow"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("a",{attrs:{href:"https://stackoverflow.com/questions/7333232/how-to-concatenate-two-mp4-files-using-ffmpeg",target:"_blank",rel:"noopener noreferrer"}},[s._v("ffmpeg.org"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("补充说明：")]),s._v(" "),a("p",[s._v("众所周知，从某些视频网站下载的视频是分段的。比如新浪视频每隔6分钟分段，俗称“ 6分钟诅咒”。\n现在的任务是将这些视频片段合并起来，并且尽量无损。\n方法一：FFmpeg concat 协议\n对于 MPEG 格式的视频，可以直接连接：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ffmpeg -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"concat:input1.mpg|input2.mpg|input3.mpg"')]),s._v(" -c copy output.mpg\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("对于非 MPEG 格式容器，但是是 MPEG 编码器（H.264、DivX、XviD、MPEG4、MPEG2、AAC、MP2、MP3 等），可以包装进 TS 格式的容器再合并。在新浪视频，有很多视频使用 H.264 编码器，可以采用这个方法")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ffmpeg -i input1.flv -c copy -bsf:v h264_mp4toannexb -f mpegts input1.ts\nffmpeg -i input2.flv -c copy -bsf:v h264_mp4toannexb -f mpegts input2.ts\nffmpeg -i input3.flv -c copy -bsf:v h264_mp4toannexb -f mpegts input3.ts\nffmpeg -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"concat:input1.ts|input2.ts|input3.ts"')]),s._v(" -c copy -bsf:a aac_adtstoasc -movflags +faststart output.mp4\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("保存 QuickTime/MP4 格式容器的时候，建议加上  -movflags +faststart。这样分享文件给别人的时候可以边下边看。\n方法二：FFmpeg concat 分离器\n这种方法成功率很高，也是最好的，但是需要 FFmpeg 1.1 以上版本。先创建一个文本文件 filelist.txt：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'input1.mkv'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'input2.mkv'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'input3.mkv'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("然后：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ffmpeg -f concat -i filelist.txt -c copy output.mkv\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("注意：使用 FFmpeg concat 分离器时，如果文件名有奇怪的字符，要在  filelist.txt 中转义。\n方法三：Mencoder 连接文件并重建索引\n这种方法只对很少的视频格式生效。幸运的是，新浪视频使用的 FLV 格式是可以这样连接的。对于没有使用 MPEG 编码器的视频（如 FLV1 编码器），可以尝试这种方法，或许能够成功。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("mencoder -forceidx -of lavf -oac copy -ovc copy -o output.flv input1.flv input2.flv input3.flv\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("方法四：使用 FFmpeg concat 过滤器重新编码（有损）\n语法有点复杂，但是其实不难。这个方法可以合并不同编码器的视频片段，也可以作为其他方法失效的后备措施。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ffmpeg -i input1.mp4 -i input2.webm -i input3.avi -filter_complex "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[0:0] [0:1] [1:0] [1:1] [2:0] [2:1] concat=n=3:v=1:a=1 [v] [a]'")]),s._v(" -map "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[v]'")]),s._v(" -map "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[a]'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("编码器选项"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" output.mkv\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如你所见，上面的命令合并了三种不同格式的文件，FFmpeg concat 过滤器会重新编码它们。 注意这是有损压缩。\n[0:0] [0:1] [1:0] [1:1] [2:0] [2:1] 分别表示第一个输入文件的视频、音频、第二个输入文件的视频、音频、第三个输入文件的视频、音频。 concat=n=3:v=1:a=1 表示有三个输入文件，输出一条视频流和一条音频流。 [v] [a] 就是得到的视频流和音频流的名字，注意在 bash 等 shell 中需要用引号，防止通配符扩展。\n提示\n以上三种方法，在可能的情况下，最好使用第二种。第一种次之，第三种更次。第四种是后备方案，尽量避免。\n规格不同的视频合并后可能会有无法预测的结果。\n有些媒体需要先分离视频和音频，合并完成后再封装回去。\n对于 Packed B-Frames 的视频，如果封装成 MKV 格式的时候提示 Can't write packet with unknown timestamp，尝试在 FFmpeg 命令的 ffmpeg 后面加上 -fflags +genpts")])])}),[],!1,null,null,null);t.default=n.exports}}]);